{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SANTOSH\\\\Desktop\\\\dti\\\\client\\\\src\\\\contexts\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect, useState } from 'react';\nimport toast from 'react-hot-toast';\nimport axios from 'axios';\nimport { useAuth } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nconst initialState = {\n  items: [],\n  totalAmount: 0,\n  rentalDays: 1\n};\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_ITEM':\n      const existingItem = state.items.find(item => item.product._id === action.payload.product._id && item.rentalDays === action.payload.rentalDays);\n      if (existingItem) {\n        const updatedItems = state.items.map(item => item.product._id === action.payload.product._id && item.rentalDays === action.payload.rentalDays ? {\n          ...item,\n          quantity: item.quantity + action.payload.quantity\n        } : item);\n        const totalAmount = updatedItems.reduce((total, item) => total + item.product.pricePerDay * item.quantity * item.rentalDays, 0);\n        return {\n          ...state,\n          items: updatedItems,\n          totalAmount\n        };\n      } else {\n        const newItems = [...state.items, action.payload];\n        const totalAmount = newItems.reduce((total, item) => total + item.product.pricePerDay * item.quantity * item.rentalDays, 0);\n        return {\n          ...state,\n          items: newItems,\n          totalAmount\n        };\n      }\n    case 'REMOVE_ITEM':\n      const filteredItems = state.items.filter(item => item.product._id !== action.payload);\n      const newTotalAmount = filteredItems.reduce((total, item) => total + item.product.pricePerDay * item.quantity * item.rentalDays, 0);\n      return {\n        ...state,\n        items: filteredItems,\n        totalAmount: newTotalAmount\n      };\n    case 'UPDATE_QUANTITY':\n      const updatedItems = state.items.map(item => item.product._id === action.payload.productId ? {\n        ...item,\n        quantity: action.payload.quantity\n      } : item);\n      const updatedTotalAmount = updatedItems.reduce((total, item) => total + item.product.pricePerDay * item.quantity * item.rentalDays, 0);\n      return {\n        ...state,\n        items: updatedItems,\n        totalAmount: updatedTotalAmount\n      };\n    case 'UPDATE_RENTAL_DAYS':\n      const recalculatedTotalAmount = state.items.reduce((total, item) => total + item.product.pricePerDay * item.quantity * action.payload, 0);\n      return {\n        ...state,\n        rentalDays: action.payload,\n        totalAmount: recalculatedTotalAmount\n      };\n    case 'CLEAR_CART':\n      return {\n        ...state,\n        items: [],\n        totalAmount: 0\n      };\n    case 'LOAD_CART':\n      return {\n        ...state,\n        ...action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(cartReducer, initialState);\n  const [cartLoading, setCartLoading] = useState(false);\n  const [isInitialLoad, setIsInitialLoad] = useState(true);\n  const {\n    isAuthenticated,\n    user,\n    loading\n  } = useAuth();\n\n  // Helper to get the correct localStorage key\n  const getCartKey = () => isAuthenticated && user && user._id ? `cart_${user._id}` : 'cart';\n\n  // Load cart from backend for logged-in users, or from localStorage for guests\n  useEffect(() => {\n    if (loading) {\n      console.log('Cart loading: waiting for auth to load');\n      return;\n    }\n    console.log('Cart loading: auth loaded, isAuthenticated:', isAuthenticated, 'user:', user);\n    const loadCart = async () => {\n      setCartLoading(true);\n      try {\n        if (isAuthenticated && user && user._id) {\n          console.log('Loading cart for authenticated user:', user._id);\n\n          // First, try to load from localStorage\n          const cartKey = `cart_${user._id}`;\n          const savedCart = localStorage.getItem(cartKey);\n          console.log('Checking localStorage with key:', cartKey);\n          if (savedCart) {\n            try {\n              const cartData = JSON.parse(savedCart);\n              console.log('Found localStorage cart:', cartData);\n              if (cartData.items && cartData.items.length > 0) {\n                console.log('Loading cart from localStorage');\n                dispatch({\n                  type: 'LOAD_CART',\n                  payload: cartData\n                });\n                return; // Exit early, don't check backend\n              }\n            } catch (error) {\n              console.error('Error parsing localStorage cart:', error);\n            }\n          }\n\n          // If no localStorage cart, try backend\n          console.log('No localStorage cart found, checking backend');\n          try {\n            const res = await axios.get('/api/users/cart');\n            const backendCart = res.data && res.data.cart ? res.data.cart : [];\n            if (backendCart.length > 0) {\n              console.log('Found backend cart:', backendCart);\n              const formattedCart = backendCart.map(item => ({\n                product: item.product,\n                quantity: item.quantity,\n                rentalDays: item.rentalDays\n              }));\n              const totalAmount = formattedCart.reduce((total, item) => total + item.product.pricePerDay * item.quantity * item.rentalDays, 0);\n              const cartData = {\n                items: formattedCart,\n                totalAmount,\n                rentalDays: 1\n              };\n              console.log('Loading cart from backend:', cartData);\n              dispatch({\n                type: 'LOAD_CART',\n                payload: cartData\n              });\n              localStorage.setItem(cartKey, JSON.stringify(cartData));\n            } else {\n              console.log('Backend cart is empty, using initial state');\n              dispatch({\n                type: 'LOAD_CART',\n                payload: {\n                  ...initialState\n                }\n              });\n            }\n          } catch (error) {\n            console.error('Error loading from backend:', error);\n            dispatch({\n              type: 'LOAD_CART',\n              payload: {\n                ...initialState\n              }\n            });\n          }\n        } else if (!isAuthenticated) {\n          console.log('Loading cart for guest user');\n          const savedCart = localStorage.getItem('cart');\n          if (savedCart) {\n            try {\n              const cartData = JSON.parse(savedCart);\n              console.log('Loading guest cart from localStorage:', cartData);\n              dispatch({\n                type: 'LOAD_CART',\n                payload: cartData\n              });\n            } catch (error) {\n              console.error('Error loading guest cart from localStorage:', error);\n              dispatch({\n                type: 'LOAD_CART',\n                payload: {\n                  ...initialState\n                }\n              });\n            }\n          } else {\n            console.log('No guest cart found, using initial state');\n            dispatch({\n              type: 'LOAD_CART',\n              payload: {\n                ...initialState\n              }\n            });\n          }\n        }\n      } finally {\n        setCartLoading(false);\n      }\n    };\n    loadCart();\n  }, [isAuthenticated, loading, user]);\n\n  // Save cart to localStorage whenever it changes\n  useEffect(() => {\n    // Don't save during initial cart loading\n    if (cartLoading) {\n      console.log('Cart loading, skipping save');\n      return;\n    }\n    console.log('Cart state changed, saving to localStorage:', state);\n    console.log('Cart items count:', state.items ? state.items.length : 0);\n\n    // Only save if we have a valid state\n    if (state && typeof state === 'object') {\n      const cartKey = getCartKey();\n      console.log('Saving cart to localStorage with key:', cartKey);\n      localStorage.setItem(cartKey, JSON.stringify(state));\n      console.log('Cart saved to localStorage successfully');\n\n      // Only sync to backend if we have items and user is authenticated\n      if (isAuthenticated && state.items && state.items.length > 0) {\n        const cartForBackend = state.items.filter(item => item.product && (typeof item.product === 'string' || typeof item.product === 'object' && item.product._id)).map(item => ({\n          product: typeof item.product === 'object' ? item.product._id : item.product,\n          quantity: item.quantity,\n          rentalDays: item.rentalDays\n        }));\n        if (cartForBackend.length > 0) {\n          console.log('Syncing cart to backend:', cartForBackend);\n          axios.post('/api/users/cart', {\n            cart: cartForBackend\n          }).then(response => {\n            console.log('Cart synced successfully:', response.data);\n          }).catch(error => {\n            console.error('Error syncing cart to backend:', error);\n          });\n        }\n      } else if (isAuthenticated && state.items && state.items.length === 0) {\n        // Sync empty cart to backend only if we're authenticated\n        console.log('Syncing empty cart to backend');\n        axios.post('/api/users/cart', {\n          cart: []\n        }).then(response => {\n          console.log('Empty cart synced successfully:', response.data);\n        }).catch(error => {\n          console.error('Error syncing empty cart to backend:', error);\n        });\n      } else {\n        console.log('Not syncing to backend - authenticated:', isAuthenticated, 'items count:', state.items ? state.items.length : 0);\n      }\n    }\n  }, [state, isAuthenticated, user, cartLoading]);\n\n  // On logout, clear user-specific cart from localStorage\n  useEffect(() => {\n    if (!isAuthenticated && user && user._id) {\n      localStorage.removeItem(`cart_${user._id}`);\n    }\n    // eslint-disable-next-line\n  }, [isAuthenticated, user]);\n\n  // Add item to cart\n  const addToCart = (product, quantity = 1, rentalDays = 1) => {\n    if (product.availableQuantity < quantity) {\n      toast.error(`Only ${product.availableQuantity} items available`);\n      return false;\n    }\n    // Check if item already exists in cart (same product and rentalDays)\n    const existingItem = state.items.find(item => item.product._id === product._id && item.rentalDays === rentalDays);\n    if (existingItem && existingItem.quantity + quantity > product.availableQuantity) {\n      toast.error(`Cannot add more items. Only ${product.availableQuantity} available`);\n      return false;\n    }\n    dispatch({\n      type: 'ADD_ITEM',\n      payload: {\n        product,\n        quantity,\n        rentalDays\n      }\n    });\n    // Let the useEffect handle backend syncing\n    return true;\n  };\n\n  // Remove item from cart\n  const removeFromCart = productId => {\n    dispatch({\n      type: 'REMOVE_ITEM',\n      payload: productId\n    });\n    // Let the useEffect handle backend syncing\n    toast.success('Item removed from cart');\n  };\n\n  // Update item quantity\n  const updateQuantity = (productId, quantity) => {\n    if (quantity <= 0) {\n      removeFromCart(productId);\n      return;\n    }\n    const item = state.items.find(item => item.product._id === productId);\n    if (item && quantity > item.product.availableQuantity) {\n      toast.error(`Only ${item.product.availableQuantity} items available`);\n      return;\n    }\n    dispatch({\n      type: 'UPDATE_QUANTITY',\n      payload: {\n        productId,\n        quantity\n      }\n    });\n    // Let the useEffect handle backend syncing\n  };\n\n  // Update rental days\n  const updateRentalDays = days => {\n    if (days < 1) {\n      toast.error('Rental days must be at least 1');\n      return;\n    }\n    dispatch({\n      type: 'UPDATE_RENTAL_DAYS',\n      payload: days\n    });\n    // Let the useEffect handle backend syncing\n  };\n\n  // Clear cart\n  const clearCart = () => {\n    dispatch({\n      type: 'CLEAR_CART'\n    });\n    // Let the useEffect handle backend clearing\n    toast.success('Cart cleared');\n  };\n\n  // Get cart item count\n  const getCartItemCount = () => {\n    return state.items.reduce((total, item) => total + item.quantity, 0);\n  };\n\n  // Check if cart is empty\n  const isCartEmpty = () => {\n    return state.items.length === 0;\n  };\n\n  // Get cart items for checkout\n  const getCheckoutItems = () => {\n    return state.items.map(item => ({\n      product: item.product._id,\n      quantity: item.quantity\n    }));\n  };\n  const value = {\n    items: state.items,\n    totalAmount: state.totalAmount,\n    rentalDays: state.rentalDays,\n    cartLoading,\n    addToCart,\n    removeFromCart,\n    updateQuantity,\n    updateRentalDays,\n    clearCart,\n    getCartItemCount,\n    isCartEmpty,\n    getCheckoutItems\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 381,\n    columnNumber: 10\n  }, this);\n};\n_s(CartProvider, \"OgFU3aG6OitlH9NVUMDxbOCo6jo=\", false, function () {\n  return [useAuth];\n});\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n_s2(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","useState","toast","axios","useAuth","jsxDEV","_jsxDEV","CartContext","initialState","items","totalAmount","rentalDays","cartReducer","state","action","type","existingItem","find","item","product","_id","payload","updatedItems","map","quantity","reduce","total","pricePerDay","newItems","filteredItems","filter","newTotalAmount","productId","updatedTotalAmount","recalculatedTotalAmount","CartProvider","children","_s","dispatch","cartLoading","setCartLoading","isInitialLoad","setIsInitialLoad","isAuthenticated","user","loading","getCartKey","console","log","loadCart","cartKey","savedCart","localStorage","getItem","cartData","JSON","parse","length","error","res","get","backendCart","data","cart","formattedCart","setItem","stringify","cartForBackend","post","then","response","catch","removeItem","addToCart","availableQuantity","removeFromCart","success","updateQuantity","updateRentalDays","days","clearCart","getCartItemCount","isCartEmpty","getCheckoutItems","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/SANTOSH/Desktop/dti/client/src/contexts/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect, useState } from 'react';\nimport toast from 'react-hot-toast';\nimport axios from 'axios';\nimport { useAuth } from './AuthContext';\n\nconst CartContext = createContext();\n\nconst initialState = {\n  items: [],\n  totalAmount: 0,\n  rentalDays: 1,\n};\n\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_ITEM':\n      const existingItem = state.items.find(item => item.product._id === action.payload.product._id && item.rentalDays === action.payload.rentalDays);\n      \n      if (existingItem) {\n        const updatedItems = state.items.map(item =>\n          item.product._id === action.payload.product._id && item.rentalDays === action.payload.rentalDays\n            ? { ...item, quantity: item.quantity + action.payload.quantity }\n            : item\n        );\n        \n        const totalAmount = updatedItems.reduce(\n          (total, item) => total + (item.product.pricePerDay * item.quantity * item.rentalDays),\n          0\n        );\n        \n        return {\n          ...state,\n          items: updatedItems,\n          totalAmount,\n        };\n      } else {\n        const newItems = [...state.items, action.payload];\n        const totalAmount = newItems.reduce(\n          (total, item) => total + (item.product.pricePerDay * item.quantity * item.rentalDays),\n          0\n        );\n        \n        return {\n          ...state,\n          items: newItems,\n          totalAmount,\n        };\n      }\n\n    case 'REMOVE_ITEM':\n      const filteredItems = state.items.filter(item => item.product._id !== action.payload);\n      const newTotalAmount = filteredItems.reduce(\n        (total, item) => total + (item.product.pricePerDay * item.quantity * item.rentalDays),\n        0\n      );\n      \n      return {\n        ...state,\n        items: filteredItems,\n        totalAmount: newTotalAmount,\n      };\n\n    case 'UPDATE_QUANTITY':\n      const updatedItems = state.items.map(item =>\n        item.product._id === action.payload.productId\n          ? { ...item, quantity: action.payload.quantity }\n          : item\n      );\n      \n      const updatedTotalAmount = updatedItems.reduce(\n        (total, item) => total + (item.product.pricePerDay * item.quantity * item.rentalDays),\n        0\n      );\n      \n      return {\n        ...state,\n        items: updatedItems,\n        totalAmount: updatedTotalAmount,\n      };\n\n    case 'UPDATE_RENTAL_DAYS':\n      const recalculatedTotalAmount = state.items.reduce(\n        (total, item) => total + (item.product.pricePerDay * item.quantity * action.payload),\n        0\n      );\n      \n      return {\n        ...state,\n        rentalDays: action.payload,\n        totalAmount: recalculatedTotalAmount,\n      };\n\n    case 'CLEAR_CART':\n      return {\n        ...state,\n        items: [],\n        totalAmount: 0,\n      };\n\n    case 'LOAD_CART':\n      return {\n        ...state,\n        ...action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const CartProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(cartReducer, initialState);\n  const [cartLoading, setCartLoading] = useState(false);\n  const [isInitialLoad, setIsInitialLoad] = useState(true);\n  const { isAuthenticated, user, loading } = useAuth();\n\n  // Helper to get the correct localStorage key\n  const getCartKey = () => (isAuthenticated && user && user._id ? `cart_${user._id}` : 'cart');\n\n  // Load cart from backend for logged-in users, or from localStorage for guests\n  useEffect(() => {\n    if (loading) {\n      console.log('Cart loading: waiting for auth to load');\n      return;\n    }\n    \n    console.log('Cart loading: auth loaded, isAuthenticated:', isAuthenticated, 'user:', user);\n    \n    const loadCart = async () => {\n      setCartLoading(true);\n      \n      try {\n        if (isAuthenticated && user && user._id) {\n          console.log('Loading cart for authenticated user:', user._id);\n          \n          // First, try to load from localStorage\n          const cartKey = `cart_${user._id}`;\n          const savedCart = localStorage.getItem(cartKey);\n          console.log('Checking localStorage with key:', cartKey);\n          \n          if (savedCart) {\n            try {\n              const cartData = JSON.parse(savedCart);\n              console.log('Found localStorage cart:', cartData);\n              \n              if (cartData.items && cartData.items.length > 0) {\n                console.log('Loading cart from localStorage');\n                dispatch({ type: 'LOAD_CART', payload: cartData });\n                return; // Exit early, don't check backend\n              }\n            } catch (error) {\n              console.error('Error parsing localStorage cart:', error);\n            }\n          }\n          \n          // If no localStorage cart, try backend\n          console.log('No localStorage cart found, checking backend');\n          try {\n            const res = await axios.get('/api/users/cart');\n            const backendCart = res.data && res.data.cart ? res.data.cart : [];\n            \n            if (backendCart.length > 0) {\n              console.log('Found backend cart:', backendCart);\n              const formattedCart = backendCart.map(item => ({\n                product: item.product,\n                quantity: item.quantity,\n                rentalDays: item.rentalDays\n              }));\n              const totalAmount = formattedCart.reduce(\n                (total, item) => total + (item.product.pricePerDay * item.quantity * item.rentalDays),\n                0\n              );\n              const cartData = { items: formattedCart, totalAmount, rentalDays: 1 };\n              console.log('Loading cart from backend:', cartData);\n              dispatch({ type: 'LOAD_CART', payload: cartData });\n              localStorage.setItem(cartKey, JSON.stringify(cartData));\n            } else {\n              console.log('Backend cart is empty, using initial state');\n              dispatch({ type: 'LOAD_CART', payload: { ...initialState } });\n            }\n          } catch (error) {\n            console.error('Error loading from backend:', error);\n            dispatch({ type: 'LOAD_CART', payload: { ...initialState } });\n          }\n        } else if (!isAuthenticated) {\n          console.log('Loading cart for guest user');\n          const savedCart = localStorage.getItem('cart');\n          \n          if (savedCart) {\n            try {\n              const cartData = JSON.parse(savedCart);\n              console.log('Loading guest cart from localStorage:', cartData);\n              dispatch({ type: 'LOAD_CART', payload: cartData });\n            } catch (error) {\n              console.error('Error loading guest cart from localStorage:', error);\n              dispatch({ type: 'LOAD_CART', payload: { ...initialState } });\n            }\n          } else {\n            console.log('No guest cart found, using initial state');\n            dispatch({ type: 'LOAD_CART', payload: { ...initialState } });\n          }\n        }\n      } finally {\n        setCartLoading(false);\n      }\n    };\n    \n    loadCart();\n  }, [isAuthenticated, loading, user]);\n\n  // Save cart to localStorage whenever it changes\n  useEffect(() => {\n    // Don't save during initial cart loading\n    if (cartLoading) {\n      console.log('Cart loading, skipping save');\n      return;\n    }\n    \n    console.log('Cart state changed, saving to localStorage:', state);\n    console.log('Cart items count:', state.items ? state.items.length : 0);\n    \n    // Only save if we have a valid state\n    if (state && typeof state === 'object') {\n      const cartKey = getCartKey();\n      console.log('Saving cart to localStorage with key:', cartKey);\n      localStorage.setItem(cartKey, JSON.stringify(state));\n      console.log('Cart saved to localStorage successfully');\n      \n      // Only sync to backend if we have items and user is authenticated\n      if (isAuthenticated && state.items && state.items.length > 0) {\n        const cartForBackend = state.items\n          .filter(item => item.product && (typeof item.product === 'string' || (typeof item.product === 'object' && item.product._id)))\n          .map(item => ({\n            product: typeof item.product === 'object' ? item.product._id : item.product,\n            quantity: item.quantity,\n            rentalDays: item.rentalDays\n          }));\n        \n        if (cartForBackend.length > 0) {\n          console.log('Syncing cart to backend:', cartForBackend);\n          axios.post('/api/users/cart', { cart: cartForBackend })\n            .then((response) => {\n              console.log('Cart synced successfully:', response.data);\n            })\n            .catch((error) => {\n              console.error('Error syncing cart to backend:', error);\n            });\n        }\n      } else if (isAuthenticated && state.items && state.items.length === 0) {\n        // Sync empty cart to backend only if we're authenticated\n        console.log('Syncing empty cart to backend');\n        axios.post('/api/users/cart', { cart: [] })\n          .then((response) => {\n            console.log('Empty cart synced successfully:', response.data);\n          })\n          .catch((error) => {\n            console.error('Error syncing empty cart to backend:', error);\n          });\n      } else {\n        console.log('Not syncing to backend - authenticated:', isAuthenticated, 'items count:', state.items ? state.items.length : 0);\n      }\n    }\n  }, [state, isAuthenticated, user, cartLoading]);\n\n  // On logout, clear user-specific cart from localStorage\n  useEffect(() => {\n    if (!isAuthenticated && user && user._id) {\n      localStorage.removeItem(`cart_${user._id}`);\n    }\n    // eslint-disable-next-line\n  }, [isAuthenticated, user]);\n\n  // Add item to cart\n  const addToCart = (product, quantity = 1, rentalDays = 1) => {\n    if (product.availableQuantity < quantity) {\n      toast.error(`Only ${product.availableQuantity} items available`);\n      return false;\n    }\n    // Check if item already exists in cart (same product and rentalDays)\n    const existingItem = state.items.find(item => item.product._id === product._id && item.rentalDays === rentalDays);\n    if (existingItem && existingItem.quantity + quantity > product.availableQuantity) {\n      toast.error(`Cannot add more items. Only ${product.availableQuantity} available`);\n      return false;\n    }\n    dispatch({\n      type: 'ADD_ITEM',\n      payload: {\n        product,\n        quantity,\n        rentalDays,\n      },\n    });\n    // Let the useEffect handle backend syncing\n    return true;\n  };\n\n  // Remove item from cart\n  const removeFromCart = (productId) => {\n    dispatch({\n      type: 'REMOVE_ITEM',\n      payload: productId,\n    });\n    // Let the useEffect handle backend syncing\n    toast.success('Item removed from cart');\n  };\n\n  // Update item quantity\n  const updateQuantity = (productId, quantity) => {\n    if (quantity <= 0) {\n      removeFromCart(productId);\n      return;\n    }\n    const item = state.items.find(item => item.product._id === productId);\n    if (item && quantity > item.product.availableQuantity) {\n      toast.error(`Only ${item.product.availableQuantity} items available`);\n      return;\n    }\n    dispatch({\n      type: 'UPDATE_QUANTITY',\n      payload: {\n        productId,\n        quantity,\n      },\n    });\n    // Let the useEffect handle backend syncing\n  };\n\n  // Update rental days\n  const updateRentalDays = (days) => {\n    if (days < 1) {\n      toast.error('Rental days must be at least 1');\n      return;\n    }\n    dispatch({\n      type: 'UPDATE_RENTAL_DAYS',\n      payload: days,\n    });\n    // Let the useEffect handle backend syncing\n  };\n\n  // Clear cart\n  const clearCart = () => {\n    dispatch({ type: 'CLEAR_CART' });\n    // Let the useEffect handle backend clearing\n    toast.success('Cart cleared');\n  };\n\n  // Get cart item count\n  const getCartItemCount = () => {\n    return state.items.reduce((total, item) => total + item.quantity, 0);\n  };\n\n  // Check if cart is empty\n  const isCartEmpty = () => {\n    return state.items.length === 0;\n  };\n\n  // Get cart items for checkout\n  const getCheckoutItems = () => {\n    return state.items.map(item => ({\n      product: item.product._id,\n      quantity: item.quantity,\n    }));\n  };\n\n  const value = {\n    items: state.items,\n    totalAmount: state.totalAmount,\n    rentalDays: state.rentalDays,\n    cartLoading,\n    addToCart,\n    removeFromCart,\n    updateQuantity,\n    updateRentalDays,\n    clearCart,\n    getCartItemCount,\n    isCartEmpty,\n    getCheckoutItems,\n  };\n\n  return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\n};\n\nexport const useCart = () => {\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}