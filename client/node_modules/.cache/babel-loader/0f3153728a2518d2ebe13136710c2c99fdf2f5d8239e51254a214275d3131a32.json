{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SANTOSH\\\\Desktop\\\\dti\\\\client\\\\src\\\\contexts\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect, useState } from 'react';\nimport { useAuth } from './AuthContext';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nconst initialState = {\n  items: [],\n  totalAmount: 0,\n  rentalDays: 1\n};\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_ITEM':\n      console.log('ADD_ITEM reducer called with payload:', action.payload);\n      const existingItem = state.items.find(item => item.product._id === action.payload.product._id && item.rentalDays === action.payload.rentalDays);\n      if (existingItem) {\n        console.log('Existing item found, updating quantity');\n        const updatedItems = state.items.map(item => item.product._id === action.payload.product._id && item.rentalDays === action.payload.rentalDays ? {\n          ...item,\n          quantity: item.quantity + action.payload.quantity\n        } : item);\n        const totalAmount = updatedItems.reduce((total, item) => {\n          const itemPrice = item.product.pricePerDay * item.quantity * item.rentalDays;\n          console.log(`Item ${item.product.name}: pricePerDay=${item.product.pricePerDay}, quantity=${item.quantity}, rentalDays=${item.rentalDays}, itemPrice=${itemPrice}`);\n          return total + itemPrice;\n        }, 0);\n        console.log('Updated total amount:', totalAmount);\n        return {\n          ...state,\n          items: updatedItems,\n          totalAmount\n        };\n      } else {\n        console.log('New item, adding to cart');\n        const newItems = [...state.items, action.payload];\n        const totalAmount = newItems.reduce((total, item) => {\n          const itemPrice = item.product.pricePerDay * item.quantity * item.rentalDays;\n          console.log(`Item ${item.product.name}: pricePerDay=${item.product.pricePerDay}, quantity=${item.quantity}, rentalDays=${item.rentalDays}, itemPrice=${itemPrice}`);\n          return total + itemPrice;\n        }, 0);\n        console.log('New total amount:', totalAmount);\n        return {\n          ...state,\n          items: newItems,\n          totalAmount\n        };\n      }\n    case 'REMOVE_ITEM':\n      const filteredItems = state.items.filter(item => item.product._id !== action.payload);\n      const newTotalAmount = filteredItems.reduce((total, item) => total + item.product.pricePerDay * item.quantity * item.rentalDays, 0);\n      return {\n        ...state,\n        items: filteredItems,\n        totalAmount: newTotalAmount\n      };\n    case 'UPDATE_QUANTITY':\n      const updatedItems = state.items.map(item => item.product._id === action.payload.productId ? {\n        ...item,\n        quantity: action.payload.quantity\n      } : item);\n      const updatedTotalAmount = updatedItems.reduce((total, item) => total + item.product.pricePerDay * item.quantity * item.rentalDays, 0);\n      return {\n        ...state,\n        items: updatedItems,\n        totalAmount: updatedTotalAmount\n      };\n    case 'UPDATE_RENTAL_DAYS':\n      const itemsWithUpdatedRentalDays = state.items.map(item => ({\n        ...item,\n        rentalDays: action.payload\n      }));\n      const totalAmountWithUpdatedRentalDays = itemsWithUpdatedRentalDays.reduce((total, item) => total + item.product.pricePerDay * item.quantity * item.rentalDays, 0);\n      return {\n        ...state,\n        items: itemsWithUpdatedRentalDays,\n        rentalDays: action.payload,\n        totalAmount: totalAmountWithUpdatedRentalDays\n      };\n    case 'UPDATE_ITEM_RENTAL_DAYS':\n      const itemsWithUpdatedItemRentalDays = state.items.map(item => item.product._id === action.payload.productId ? {\n        ...item,\n        rentalDays: action.payload.rentalDays\n      } : item);\n      const totalAmountWithUpdatedItemRentalDays = itemsWithUpdatedItemRentalDays.reduce((total, item) => total + item.product.pricePerDay * item.quantity * item.rentalDays, 0);\n      return {\n        ...state,\n        items: itemsWithUpdatedItemRentalDays,\n        totalAmount: totalAmountWithUpdatedItemRentalDays\n      };\n    case 'CLEAR_CART':\n      return {\n        ...initialState\n      };\n    case 'LOAD_CART':\n      return {\n        ...action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(cartReducer, initialState);\n  const [cartLoading, setCartLoading] = useState(false);\n  const [isInitialLoad, setIsInitialLoad] = useState(true);\n  const {\n    isAuthenticated,\n    user,\n    loading\n  } = useAuth();\n\n  // Helper to get the correct localStorage key\n  const getCartKey = () => isAuthenticated && user && user._id ? `cart_${user._id}` : 'cart';\n\n  // Load cart from localStorage first, then sync with backend if needed\n  useEffect(() => {\n    if (loading) {\n      console.log('Cart loading: waiting for auth to load');\n      return;\n    }\n    console.log('Cart loading: auth loaded, isAuthenticated:', isAuthenticated, 'user:', user);\n\n    // Reset initial load flag when auth changes\n    setIsInitialLoad(true);\n    const loadCart = async () => {\n      setCartLoading(true);\n      try {\n        // Always try localStorage first\n        const cartKey = getCartKey();\n        const savedCart = localStorage.getItem(cartKey);\n        console.log('Checking localStorage with key:', cartKey);\n        if (savedCart) {\n          try {\n            const cartData = JSON.parse(savedCart);\n            console.log('Found localStorage cart:', cartData);\n            if (cartData.items && cartData.items.length > 0) {\n              console.log('Loading cart from localStorage');\n              dispatch({\n                type: 'LOAD_CART',\n                payload: cartData\n              });\n\n              // If authenticated, sync to backend in background\n              if (isAuthenticated && user && user._id) {\n                console.log('Syncing localStorage cart to backend');\n                const cartForBackend = cartData.items.map(item => ({\n                  product: item.product._id,\n                  quantity: item.quantity,\n                  rentalDays: item.rentalDays\n                }));\n                try {\n                  await axios.post('/api/users/cart', {\n                    cart: cartForBackend\n                  });\n                  console.log('Cart synced to backend successfully');\n                } catch (error) {\n                  console.error('Error syncing to backend:', error);\n                }\n              }\n              setIsInitialLoad(false);\n              return;\n            }\n          } catch (error) {\n            console.error('Error parsing localStorage cart:', error);\n          }\n        }\n\n        // If no localStorage cart and user is authenticated, try backend\n        if (isAuthenticated && user && user._id) {\n          console.log('No localStorage cart found, checking backend');\n          try {\n            const res = await axios.get('/api/users/cart');\n            const backendCart = res.data && res.data.cart ? res.data.cart : [];\n            if (backendCart.length > 0) {\n              console.log('Found backend cart:', backendCart);\n              const formattedCart = backendCart.map(item => ({\n                product: item.product,\n                quantity: item.quantity,\n                rentalDays: item.rentalDays\n              }));\n              const totalAmount = formattedCart.reduce((total, item) => total + item.product.pricePerDay * item.quantity * item.rentalDays, 0);\n              const cartData = {\n                items: formattedCart,\n                totalAmount,\n                rentalDays: 1\n              };\n              console.log('Loading cart from backend:', cartData);\n              dispatch({\n                type: 'LOAD_CART',\n                payload: cartData\n              });\n              localStorage.setItem(cartKey, JSON.stringify(cartData));\n            } else {\n              console.log('Backend cart is empty, using initial state');\n              dispatch({\n                type: 'LOAD_CART',\n                payload: {\n                  ...initialState\n                }\n              });\n            }\n          } catch (error) {\n            console.error('Error loading from backend:', error);\n            dispatch({\n              type: 'LOAD_CART',\n              payload: {\n                ...initialState\n              }\n            });\n          }\n        } else {\n          console.log('No localStorage cart found and not authenticated, using initial state');\n          dispatch({\n            type: 'LOAD_CART',\n            payload: {\n              ...initialState\n            }\n          });\n        }\n      } finally {\n        setCartLoading(false);\n        setIsInitialLoad(false);\n      }\n    };\n    loadCart();\n  }, [isAuthenticated, loading, user]);\n\n  // Save cart to localStorage whenever it changes\n  useEffect(() => {\n    if (cartLoading || isInitialLoad) {\n      console.log('Cart loading or initial load, skipping save');\n      return;\n    }\n    console.log('Cart state changed, saving to localStorage:', state);\n    if (state && typeof state === 'object') {\n      const cartKey = getCartKey();\n      console.log('Saving cart to localStorage with key:', cartKey);\n      localStorage.setItem(cartKey, JSON.stringify(state));\n      console.log('Cart saved to localStorage successfully');\n    }\n  }, [state, cartLoading, isInitialLoad]);\n\n  // Sync cart to backend when it changes (only for authenticated users)\n  useEffect(() => {\n    if (cartLoading || !isAuthenticated || !user || !user._id) {\n      return;\n    }\n    console.log('Syncing cart to backend:', state.items.length, 'items');\n    if (state.items && state.items.length > 0) {\n      const cartForBackend = state.items.map(item => ({\n        product: item.product._id,\n        quantity: item.quantity,\n        rentalDays: item.rentalDays\n      }));\n      console.log('Syncing cart to backend:', cartForBackend);\n      axios.post('/api/users/cart', {\n        cart: cartForBackend\n      }).then(response => {\n        console.log('Cart synced to backend successfully:', response.data);\n      }).catch(error => {\n        console.error('Error syncing cart to backend:', error);\n      });\n    } else {\n      // Don't clear backend cart automatically - only clear when explicitly called\n      console.log('Cart is empty, but not clearing backend cart automatically');\n    }\n  }, [state.items, isAuthenticated, user, cartLoading]);\n\n  // Clear user-specific cart from localStorage on logout\n  useEffect(() => {\n    if (!isAuthenticated && user && user._id) {\n      localStorage.removeItem(`cart_${user._id}`);\n    }\n  }, [isAuthenticated, user]);\n\n  // Add item to cart\n  const addToCart = (product, quantity = 1, rentalDays = 1) => {\n    if (product.availableQuantity < quantity) {\n      toast.error(`Only ${product.availableQuantity} items available`);\n      return false;\n    }\n    const existingItem = state.items.find(item => item.product._id === product._id && item.rentalDays === rentalDays);\n    if (existingItem && existingItem.quantity + quantity > product.availableQuantity) {\n      toast.error(`Cannot add more items. Only ${product.availableQuantity} available`);\n      return false;\n    }\n    dispatch({\n      type: 'ADD_ITEM',\n      payload: {\n        product,\n        quantity,\n        rentalDays\n      }\n    });\n    return true;\n  };\n\n  // Remove item from cart\n  const removeFromCart = productId => {\n    dispatch({\n      type: 'REMOVE_ITEM',\n      payload: productId\n    });\n    toast.success('Item removed from cart');\n  };\n\n  // Update item quantity\n  const updateQuantity = (productId, quantity) => {\n    if (quantity <= 0) {\n      removeFromCart(productId);\n      return;\n    }\n    const item = state.items.find(item => item.product._id === productId);\n    if (item && quantity > item.product.availableQuantity) {\n      toast.error(`Only ${item.product.availableQuantity} items available`);\n      return;\n    }\n    dispatch({\n      type: 'UPDATE_QUANTITY',\n      payload: {\n        productId,\n        quantity\n      }\n    });\n  };\n\n  // Update rental days for a specific item\n  const updateItemRentalDays = (productId, rentalDays) => {\n    if (rentalDays < 1) {\n      toast.error('Rental days must be at least 1');\n      return;\n    }\n    dispatch({\n      type: 'UPDATE_ITEM_RENTAL_DAYS',\n      payload: {\n        productId,\n        rentalDays\n      }\n    });\n  };\n\n  // Update rental days\n  const updateRentalDays = days => {\n    if (days < 1) {\n      toast.error('Rental days must be at least 1');\n      return;\n    }\n    dispatch({\n      type: 'UPDATE_RENTAL_DAYS',\n      payload: days\n    });\n  };\n\n  // Clear cart\n  const clearCart = () => {\n    dispatch({\n      type: 'CLEAR_CART'\n    });\n\n    // Explicitly clear backend cart\n    if (isAuthenticated && user && user._id) {\n      console.log('Explicitly clearing backend cart');\n      axios.post('/api/users/cart', {\n        cart: []\n      }).then(response => {\n        console.log('Backend cart cleared successfully:', response.data);\n      }).catch(error => {\n        console.error('Error clearing backend cart:', error);\n      });\n    }\n    toast.success('Cart cleared');\n  };\n\n  // Get cart item count\n  const getCartItemCount = () => {\n    return state.items.reduce((total, item) => total + item.quantity, 0);\n  };\n\n  // Check if cart is empty\n  const isCartEmpty = () => {\n    return state.items.length === 0;\n  };\n\n  // Get cart items for checkout\n  const getCheckoutItems = () => {\n    return state.items.map(item => ({\n      product: item.product._id,\n      quantity: item.quantity\n    }));\n  };\n  const value = {\n    items: state.items,\n    totalAmount: state.totalAmount,\n    rentalDays: state.rentalDays,\n    cartLoading,\n    addToCart,\n    removeFromCart,\n    updateQuantity,\n    updateRentalDays,\n    updateItemRentalDays,\n    clearCart,\n    getCartItemCount,\n    isCartEmpty,\n    getCheckoutItems\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 409,\n    columnNumber: 10\n  }, this);\n};\n_s(CartProvider, \"a/nLHM7AbYflIpXzFWu7wqsNrOo=\", false, function () {\n  return [useAuth];\n});\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n_s2(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","useState","useAuth","axios","toast","jsxDEV","_jsxDEV","CartContext","initialState","items","totalAmount","rentalDays","cartReducer","state","action","type","console","log","payload","existingItem","find","item","product","_id","updatedItems","map","quantity","reduce","total","itemPrice","pricePerDay","name","newItems","filteredItems","filter","newTotalAmount","productId","updatedTotalAmount","itemsWithUpdatedRentalDays","totalAmountWithUpdatedRentalDays","itemsWithUpdatedItemRentalDays","totalAmountWithUpdatedItemRentalDays","CartProvider","children","_s","dispatch","cartLoading","setCartLoading","isInitialLoad","setIsInitialLoad","isAuthenticated","user","loading","getCartKey","loadCart","cartKey","savedCart","localStorage","getItem","cartData","JSON","parse","length","cartForBackend","post","cart","error","res","get","backendCart","data","formattedCart","setItem","stringify","then","response","catch","removeItem","addToCart","availableQuantity","removeFromCart","success","updateQuantity","updateItemRentalDays","updateRentalDays","days","clearCart","getCartItemCount","isCartEmpty","getCheckoutItems","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/SANTOSH/Desktop/dti/client/src/contexts/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect, useState } from 'react';\nimport { useAuth } from './AuthContext';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\n\nconst CartContext = createContext();\n\nconst initialState = {\n  items: [],\n  totalAmount: 0,\n  rentalDays: 1,\n};\n\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_ITEM':\n      console.log('ADD_ITEM reducer called with payload:', action.payload);\n      const existingItem = state.items.find(\n        item => item.product._id === action.payload.product._id && item.rentalDays === action.payload.rentalDays\n      );\n      \n      if (existingItem) {\n        console.log('Existing item found, updating quantity');\n        const updatedItems = state.items.map(item =>\n          item.product._id === action.payload.product._id && item.rentalDays === action.payload.rentalDays\n            ? { ...item, quantity: item.quantity + action.payload.quantity }\n            : item\n        );\n        const totalAmount = updatedItems.reduce(\n          (total, item) => {\n            const itemPrice = item.product.pricePerDay * item.quantity * item.rentalDays;\n            console.log(`Item ${item.product.name}: pricePerDay=${item.product.pricePerDay}, quantity=${item.quantity}, rentalDays=${item.rentalDays}, itemPrice=${itemPrice}`);\n            return total + itemPrice;\n          },\n          0\n        );\n        console.log('Updated total amount:', totalAmount);\n        return { ...state, items: updatedItems, totalAmount };\n      } else {\n        console.log('New item, adding to cart');\n        const newItems = [...state.items, action.payload];\n        const totalAmount = newItems.reduce(\n          (total, item) => {\n            const itemPrice = item.product.pricePerDay * item.quantity * item.rentalDays;\n            console.log(`Item ${item.product.name}: pricePerDay=${item.product.pricePerDay}, quantity=${item.quantity}, rentalDays=${item.rentalDays}, itemPrice=${itemPrice}`);\n            return total + itemPrice;\n          },\n          0\n        );\n        console.log('New total amount:', totalAmount);\n        return { ...state, items: newItems, totalAmount };\n      }\n\n    case 'REMOVE_ITEM':\n      const filteredItems = state.items.filter(item => item.product._id !== action.payload);\n      const newTotalAmount = filteredItems.reduce(\n        (total, item) => total + (item.product.pricePerDay * item.quantity * item.rentalDays),\n        0\n      );\n      return { ...state, items: filteredItems, totalAmount: newTotalAmount };\n\n    case 'UPDATE_QUANTITY':\n      const updatedItems = state.items.map(item =>\n        item.product._id === action.payload.productId\n          ? { ...item, quantity: action.payload.quantity }\n          : item\n      );\n      const updatedTotalAmount = updatedItems.reduce(\n        (total, item) => total + (item.product.pricePerDay * item.quantity * item.rentalDays),\n        0\n      );\n      return { ...state, items: updatedItems, totalAmount: updatedTotalAmount };\n\n    case 'UPDATE_RENTAL_DAYS':\n      const itemsWithUpdatedRentalDays = state.items.map(item => ({\n        ...item,\n        rentalDays: action.payload\n      }));\n      const totalAmountWithUpdatedRentalDays = itemsWithUpdatedRentalDays.reduce(\n        (total, item) => total + (item.product.pricePerDay * item.quantity * item.rentalDays),\n        0\n      );\n      return {\n        ...state,\n        items: itemsWithUpdatedRentalDays,\n        rentalDays: action.payload,\n        totalAmount: totalAmountWithUpdatedRentalDays\n      };\n\n    case 'UPDATE_ITEM_RENTAL_DAYS':\n      const itemsWithUpdatedItemRentalDays = state.items.map(item =>\n        item.product._id === action.payload.productId\n          ? { ...item, rentalDays: action.payload.rentalDays }\n          : item\n      );\n      const totalAmountWithUpdatedItemRentalDays = itemsWithUpdatedItemRentalDays.reduce(\n        (total, item) => total + (item.product.pricePerDay * item.quantity * item.rentalDays),\n        0\n      );\n      return {\n        ...state,\n        items: itemsWithUpdatedItemRentalDays,\n        totalAmount: totalAmountWithUpdatedItemRentalDays\n      };\n\n    case 'CLEAR_CART':\n      return { ...initialState };\n\n    case 'LOAD_CART':\n      return { ...action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport const CartProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(cartReducer, initialState);\n  const [cartLoading, setCartLoading] = useState(false);\n  const [isInitialLoad, setIsInitialLoad] = useState(true);\n  const { isAuthenticated, user, loading } = useAuth();\n\n  // Helper to get the correct localStorage key\n  const getCartKey = () => (isAuthenticated && user && user._id ? `cart_${user._id}` : 'cart');\n\n  // Load cart from localStorage first, then sync with backend if needed\n  useEffect(() => {\n    if (loading) {\n      console.log('Cart loading: waiting for auth to load');\n      return;\n    }\n\n    console.log('Cart loading: auth loaded, isAuthenticated:', isAuthenticated, 'user:', user);\n    \n    // Reset initial load flag when auth changes\n    setIsInitialLoad(true);\n    \n    const loadCart = async () => {\n      setCartLoading(true);\n      \n      try {\n        // Always try localStorage first\n        const cartKey = getCartKey();\n        const savedCart = localStorage.getItem(cartKey);\n        console.log('Checking localStorage with key:', cartKey);\n\n        if (savedCart) {\n          try {\n            const cartData = JSON.parse(savedCart);\n            console.log('Found localStorage cart:', cartData);\n            \n            if (cartData.items && cartData.items.length > 0) {\n              console.log('Loading cart from localStorage');\n              dispatch({ type: 'LOAD_CART', payload: cartData });\n              \n              // If authenticated, sync to backend in background\n              if (isAuthenticated && user && user._id) {\n                console.log('Syncing localStorage cart to backend');\n                const cartForBackend = cartData.items.map(item => ({\n                  product: item.product._id,\n                  quantity: item.quantity,\n                  rentalDays: item.rentalDays\n                }));\n                \n                try {\n                  await axios.post('/api/users/cart', { cart: cartForBackend });\n                  console.log('Cart synced to backend successfully');\n                } catch (error) {\n                  console.error('Error syncing to backend:', error);\n                }\n              }\n              setIsInitialLoad(false);\n              return;\n            }\n          } catch (error) {\n            console.error('Error parsing localStorage cart:', error);\n          }\n        }\n\n        // If no localStorage cart and user is authenticated, try backend\n        if (isAuthenticated && user && user._id) {\n          console.log('No localStorage cart found, checking backend');\n          try {\n            const res = await axios.get('/api/users/cart');\n            const backendCart = res.data && res.data.cart ? res.data.cart : [];\n            \n            if (backendCart.length > 0) {\n              console.log('Found backend cart:', backendCart);\n              const formattedCart = backendCart.map(item => ({\n                product: item.product,\n                quantity: item.quantity,\n                rentalDays: item.rentalDays\n              }));\n              const totalAmount = formattedCart.reduce(\n                (total, item) => total + (item.product.pricePerDay * item.quantity * item.rentalDays),\n                0\n              );\n              const cartData = { items: formattedCart, totalAmount, rentalDays: 1 };\n              console.log('Loading cart from backend:', cartData);\n              dispatch({ type: 'LOAD_CART', payload: cartData });\n              localStorage.setItem(cartKey, JSON.stringify(cartData));\n            } else {\n              console.log('Backend cart is empty, using initial state');\n              dispatch({ type: 'LOAD_CART', payload: { ...initialState } });\n            }\n          } catch (error) {\n            console.error('Error loading from backend:', error);\n            dispatch({ type: 'LOAD_CART', payload: { ...initialState } });\n          }\n        } else {\n          console.log('No localStorage cart found and not authenticated, using initial state');\n          dispatch({ type: 'LOAD_CART', payload: { ...initialState } });\n        }\n      } finally {\n        setCartLoading(false);\n        setIsInitialLoad(false);\n      }\n    };\n\n    loadCart();\n  }, [isAuthenticated, loading, user]);\n\n  // Save cart to localStorage whenever it changes\n  useEffect(() => {\n    if (cartLoading || isInitialLoad) {\n      console.log('Cart loading or initial load, skipping save');\n      return;\n    }\n\n    console.log('Cart state changed, saving to localStorage:', state);\n    \n    if (state && typeof state === 'object') {\n      const cartKey = getCartKey();\n      console.log('Saving cart to localStorage with key:', cartKey);\n      localStorage.setItem(cartKey, JSON.stringify(state));\n      console.log('Cart saved to localStorage successfully');\n    }\n  }, [state, cartLoading, isInitialLoad]);\n\n  // Sync cart to backend when it changes (only for authenticated users)\n  useEffect(() => {\n    if (cartLoading || !isAuthenticated || !user || !user._id) {\n      return;\n    }\n\n    console.log('Syncing cart to backend:', state.items.length, 'items');\n    \n    if (state.items && state.items.length > 0) {\n      const cartForBackend = state.items.map(item => ({\n        product: item.product._id,\n        quantity: item.quantity,\n        rentalDays: item.rentalDays\n      }));\n      \n      console.log('Syncing cart to backend:', cartForBackend);\n      axios.post('/api/users/cart', { cart: cartForBackend })\n        .then((response) => {\n          console.log('Cart synced to backend successfully:', response.data);\n        })\n        .catch((error) => {\n          console.error('Error syncing cart to backend:', error);\n        });\n    } else {\n      // Don't clear backend cart automatically - only clear when explicitly called\n      console.log('Cart is empty, but not clearing backend cart automatically');\n    }\n  }, [state.items, isAuthenticated, user, cartLoading]);\n\n  // Clear user-specific cart from localStorage on logout\n  useEffect(() => {\n    if (!isAuthenticated && user && user._id) {\n      localStorage.removeItem(`cart_${user._id}`);\n    }\n  }, [isAuthenticated, user]);\n\n  // Add item to cart\n  const addToCart = (product, quantity = 1, rentalDays = 1) => {\n    if (product.availableQuantity < quantity) {\n      toast.error(`Only ${product.availableQuantity} items available`);\n      return false;\n    }\n    \n    const existingItem = state.items.find(item => item.product._id === product._id && item.rentalDays === rentalDays);\n    if (existingItem && existingItem.quantity + quantity > product.availableQuantity) {\n      toast.error(`Cannot add more items. Only ${product.availableQuantity} available`);\n      return false;\n    }\n    \n    dispatch({\n      type: 'ADD_ITEM',\n      payload: {\n        product,\n        quantity,\n        rentalDays,\n      },\n    });\n    return true;\n  };\n\n  // Remove item from cart\n  const removeFromCart = (productId) => {\n    dispatch({\n      type: 'REMOVE_ITEM',\n      payload: productId,\n    });\n    toast.success('Item removed from cart');\n  };\n\n  // Update item quantity\n  const updateQuantity = (productId, quantity) => {\n    if (quantity <= 0) {\n      removeFromCart(productId);\n      return;\n    }\n    const item = state.items.find(item => item.product._id === productId);\n    if (item && quantity > item.product.availableQuantity) {\n      toast.error(`Only ${item.product.availableQuantity} items available`);\n      return;\n    }\n    dispatch({\n      type: 'UPDATE_QUANTITY',\n      payload: {\n        productId,\n        quantity,\n      },\n    });\n  };\n\n  // Update rental days for a specific item\n  const updateItemRentalDays = (productId, rentalDays) => {\n    if (rentalDays < 1) {\n      toast.error('Rental days must be at least 1');\n      return;\n    }\n    dispatch({\n      type: 'UPDATE_ITEM_RENTAL_DAYS',\n      payload: {\n        productId,\n        rentalDays,\n      },\n    });\n  };\n\n  // Update rental days\n  const updateRentalDays = (days) => {\n    if (days < 1) {\n      toast.error('Rental days must be at least 1');\n      return;\n    }\n    dispatch({\n      type: 'UPDATE_RENTAL_DAYS',\n      payload: days,\n    });\n  };\n\n  // Clear cart\n  const clearCart = () => {\n    dispatch({ type: 'CLEAR_CART' });\n    \n    // Explicitly clear backend cart\n    if (isAuthenticated && user && user._id) {\n      console.log('Explicitly clearing backend cart');\n      axios.post('/api/users/cart', { cart: [] })\n        .then((response) => {\n          console.log('Backend cart cleared successfully:', response.data);\n        })\n        .catch((error) => {\n          console.error('Error clearing backend cart:', error);\n        });\n    }\n    \n    toast.success('Cart cleared');\n  };\n\n  // Get cart item count\n  const getCartItemCount = () => {\n    return state.items.reduce((total, item) => total + item.quantity, 0);\n  };\n\n  // Check if cart is empty\n  const isCartEmpty = () => {\n    return state.items.length === 0;\n  };\n\n  // Get cart items for checkout\n  const getCheckoutItems = () => {\n    return state.items.map(item => ({\n      product: item.product._id,\n      quantity: item.quantity,\n    }));\n  };\n\n  const value = {\n    items: state.items,\n    totalAmount: state.totalAmount,\n    rentalDays: state.rentalDays,\n    cartLoading,\n    addToCart,\n    removeFromCart,\n    updateQuantity,\n    updateRentalDays,\n    updateItemRentalDays,\n    clearCart,\n    getCartItemCount,\n    isCartEmpty,\n    getCheckoutItems,\n  };\n\n  return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\n};\n\nexport const useCart = () => {\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}